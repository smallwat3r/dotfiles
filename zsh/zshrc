# ZSH config.
# Matthieu Petiteau <mpetiteau.pro@gmail.com>

# {{{1 env

# {{{2 miscellaneous

export ZSH="$HOME/.oh-my-zsh"
export TERM="xterm-256color"
export CLICOLOR=1
export EDITOR="/usr/local/bin/nvim"
export LDFLAGS="-L/usr/local/opt/python@3.8/lib"
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export KEYTIMEOUT=1

# }}}2
# {{{2 paths

export PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin"
export PATH="$HOME/bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="/usr/local/opt/python@3.8/bin:$PATH"
export GOPATH="$HOME/go"
export PATH="$HOME/go/bin:$PATH"

# }}}2
# {{{2 grep

export GREP_OPTIONS='--color=auto'
export GREP_COLOR='0;30;42'

# }}}2
# {{{2 homebrew

export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_AUTO_UPDATE=1

# }}}2
# {{{2 history

export HISTFILE=~/.zsh_history
export HISTSIZE=999999999
export SAVEHIST=$HISTSIZE

# }}}2

# }}}1 env
# {{{1 aliases

# {{{2 editing

alias \
  vi="nvim" \
  vim="nvim" \
  svi="sudo nvim" \
  edit="$EDITOR" \
  e="$EDITOR" \
  vimdiff="nvim -d" \
  vidiff="nvim -d" \
  vie="$EDITOR $HOME/.config/nvim/init.vim" \
  zshe="$EDITOR $HOME/.zshrc"

# }}}2
# {{{2 python

alias \
  python2="python2.7" \
  python="python3.8" \
  py="python3.8" \
  pip="pip3.8" \
  venv="python -m venv venv"

# }}}2
# {{{2 tmux

alias  \
  sp="tmux splitw -v"  \
  vs="tmux splitw -h" \
  tks="tmux kill-session -t" \
  tksa="tmux kill-session -a" \
  tls="tmux list-sessions"

# }}}2
# {{{2 move around

alias \
  dots="cd $HOME/dotfiles" \
  c="clear" \
  qq="exit" \
  mkdir="mkdir -pv" \
  p="pwd" \
  ls="ls -p" \
  ls.="ls -d .*" \
  ..="cd .." \
  ...="cd ../.." \
  ....="cd ../../.." \
  .....="cd ../../../.."

# }}}2
# {{{2 git

alias \
  g="git" \
  ga="git add" \
  gs="git status" \
  gc="git commit -v" \
  gc!="git commit -v --amend" \
  gcq="git commit -m 'Quick commit'" \
  gcb="git checkout -b" \
  gb="git branch" \
  gp="git push" \
  gd="git diff"

# }}}2
# {{{2 scripts

alias \
  trecord="asciinema rec" \
  trecordgif="asciicast2gif" \
  sk="sketch"

# }}}2
# {{{2 miscellaneous

alias \
  fonts="open $HOME/Library/Fonts" \
  pubip="curl http://ipecho.net/plain; echo" \
  myip="curl http://ipecho.net/plain; echo"

# }}}2

# }}}1 aliases
# {{{1 functions

# {{{2 pubkey copy public key to clipboard

pubkey() {
  more $HOME/.ssh/id_rsa.pub |
    pbcopy |
    printf 'Public key copied to clipboard.\n'
}

# }}}2
# {{{2 psg Ripgrep process

psg() {
  ps aux |
    rg -v rg |
    rg -i -e VSZ -e "$@"
}

# }}}2
# {{{2 hs Ripgrep history

hs() {
  history |
    rg "$@"
}

# }}}2
# {{{2 hsu Ripgrep history (unique matches)

hsu() {
  history |
    cut -c 8- |
    sort -u |
    rg "$@"
}

# }}}2
# {{{2 o open current dir or the one in args

o() {
  [[ $# -eq 0 ]] && open . || open "$@"
}

# }}}2
# {{{2 urls ripgrep - get urls

urls() {
  rg '[a-zA-Z]+://[-a-zA-Z0-9._+]+[-a-zA-Z0-9._+#=?&:;%/!~()]+'
}

# }}}2
# {{{2 mkd create and enter directory

mkd() {
  mkdir -p "$@" && cd "$@"
}

# }}}2
# {{{2 csvpreview preview csv files.

# source: http://stackoverflow.com/questions/1875305/command-line-csv-viewer
csvpreview() {
  sed 's/,,/, ,/g;s/,,/, ,/g' "$@" |
    column -s, -t |
    less -#2 -N -S
}

# }}}2
# {{{2 fe FZF select and open file

fe() {
  IFS=$'\n' files=($(fzf --query="$1" --preview "cat {}" --multi --select-1 --exit-0))
  [[ -n $files ]] && $EDITOR "${files[@]}"
}

# }}}2
# {{{2 frg FZF fuzzy ripgrep

frg() {
  local file line
  read -r file line <<<"$(
    rg --column --line-number --no-heading --smart-case $@ |
      fzf --query=$@ |
      awk -F: '{print $1, $2}'
  )"
  [[ -n $file ]] && $EDITOR $file +$line
}

# }}}2
# {{{2 fbr FZF checkout git branch (including remote branches)

fbr() {
  local branches=$(
    git branch --all |
      grep -v HEAD
  )
  local branch=$(
    echo "$branches" |
      fzf -d $(( 2 + $(wc -l <<< "$branches") )) +m
  )
  git checkout $(
    echo "$branch" |
      sed "s/.* //" |
      sed "s#remotes/[^/]*/##"
  )
}

# }}}2
# {{{2 fco FZF git commit browser

fco() {
  git log --graph --color=always --format="%C(auto)%h%d %s / %C(white)%cr by %an" "$@" |
    fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort --bind \
      "ctrl-m:execute: (
        grep -o '[a-f0-9]\{7\}' |
          head -1 |
          xargs -I % sh -c 'git show --color=always % |
          less -R') << 'FZF-EOF'
      {}
      FZF-EOF"
}

# }}}2
# {{{2 da FZF Select a docker container to start and attach to

da() {
  local cid=$(
    docker ps -a |
      sed 1d |
      fzf -1 -q "$1" |
      awk '{print $1}'
  )
  [ -n "$cid" ] && docker start "$cid" && docker attach "$cid"
}

# }}}2
# {{{2 ds FZF Select a running docker container to stop

ds() {
  local cid=$(
    docker ps |
      sed 1d |
      fzf -q "$1" |
      awk '{print $1}'
  )
  [ -n "$cid" ] && docker stop "$cid"
}

# }}}2
# {{{2 drm FZF Select a docker container to remove

drm() {
  local cid=$(
    docker ps -a |
      sed 1d |
      fzf -q "$1" |
      awk '{print $1}'
  )
  [ -n "$cid" ] && docker rm "$cid"
}

# }}}2
# {{{2 dps shorten docker ps

dps() {
  docker ps --format '{{.ID}} ¬¬¬ {{.Image}} ¬¬¬ {{.Names}} ¬¬¬ {{.Status}}' |
    column -t -s '¬¬¬' -c $(tput cols)
}

# }}}2
# {{{2 dprune docker prune

dprune() {
  printf 'y' |
    docker system prune
}

# }}}2
# {{{2 dsh docker exec

dsh() {
  docker exec -it $1 /bin/sh
}

# }}}2
# {{{2 dlog docker show logs

dlog() {
  docker logs $1 --follow
}

# }}}2

# }}}1 functions
# {{{1 antigen

source /usr/local/share/antigen/antigen.zsh

antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-completions
antigen bundle softmoth/zsh-vim-mode

antigen apply

# }}}1 antigen
# {{{1 prompt

# zsh completions
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}'

COMPLETION_WAITING_DOTS=true
DISABLE_UNTRACKED_FILES_DIRTY=true

# zsh auto-suggestions colors
ZSH_AUTOSUGGEST_USE_ASYNC=true
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=200"
ZSH_AUTOSUGGEST_STRATEGY=(history completion)

# starship prompt
eval "$(starship init zsh)"

# }}}1 prompt
# {{{1 misc

# fzf
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh
export FZF_DEFAULT_OPTS="
--height 96% --reverse --border
--color fg:231,bg:0,hl:199,fg+:231,bg+:0,hl+:190
--color info:189,prompt:161,spinner:201,pointer:201,marker:118
"
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow -g "!__pycache__/" -g "!.git/"'

# launch tmux on start
case $- in *i*)
  [[ -z $TMUX ]] && exec tmux
esac

# zsh vim yank to clipboard (using pbcopy)
vi_yank_pbcopy() {
  zle vi-yank
  echo "$CUTBUFFER" |
    pbcopy
}
zle -N vi_yank_pbcopy
bindkey -M vicmd 'y' vi_yank_pbcopy

# }}}1 misc
