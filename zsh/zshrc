#!/bin/zsh
# File  : zshrc
# Author: Matthieu Petiteau <mpetiteau.pro@gmail.com>
# Date  : 26.10.2019
#
# ZSH config.
#

export ZSH="$HOME/.oh-my-zsh"
export TERM=xterm-256color

#
# BUNDLE MANAGER
# --------------------------------------------------------------------------------------
source ~/.antigen/antigen.zsh
antigen use oh-my-zsh

antigen bundle git
antigen bundle pip
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-completions

antigen apply

#
# GENERAL
# --------------------------------------------------------------------------------------
export CLICOLOR=1
export EDITOR=/usr/local/bin/vim

export PATH=$PATH:$(go env GOPATH)/bin:$HOME/.cargo/bin:$HOME/Library/Python/3.7/bin
export GOPATH=$(go env GOPATH)

# grep colors
export GREP_OPTIONS='--color=auto'
export GREP_COLOR='0;30;42'

# fzf colors
export FZF_DEFAULT_OPTS="
    --height 40% --layout=reverse --border
    --color fg:231,bg:235,hl:199,fg+:231,bg+:238,hl+:201
    --color info:189,prompt:161,spinner:201,pointer:201,marker:118
"
export FZF_DEFAULT_COMMAND="fd -t f -H -L -E .git -E __pycache__"

DISABLE_AUTO_TITLE="true"
COMPLETION_WAITING_DOTS="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"

# zsh suggestions colors
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=200"

# Overwrite zsh-syntax-highlighting default defaults
typeset -A ZSH_HIGHLIGHT_STYLES

# underline
for e (command precommand function builtin alias reserved-word); do
    ZSH_HIGHLIGHT_STYLES[$e]="underline"; done

# flash green
for e (redirection commandseparator); do ZSH_HIGHLIGHT_STYLES[$e]="fg=118"; done

# none style
for e (globbing rc-quote path path_separator history-expansion command-substitution
    command-substitution-unquoted command-substitution-quoted command-substitution-delimiter
    command-substitution-delimiter-unquoted command-substitution-delimiter-quoted
    process-substitution process-substitution-delimiter single-hyphen-option
    double-hyphen-option back-quoted-argument back-quoted-argument-unclosed
    back-quoted-argument-unclosed single-quoted-argument single-quoted-argument-unclosed
    double-quoted-argument double-quoted-argument-unclosed dollar-quoted-argument
    dollar-quoted-argument dollar-double-quoted-argument back-double-quoted-argument
    back-dollar-quoted-argument assign named-fd arg0 path_prefix path_prefix_separator
    default hashed-command
    ); do ZSH_HIGHLIGHT_STYLES[$e]="none"; done

# other
ZSH_HIGHLIGHT_STYLES[comment]="fg=146"
ZSH_HIGHLIGHT_STYLES[unknown-token]="fg=161"  # errors

#
# PROMPT
# --------------------------------------------------------------------------------------
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/'
}
local_ip() {
    ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'
}
precmd() {
    local preprompt_left='%n@$(local_ip) %30<...<%~%<<%F$fg_bold[yellow]$(parse_git_branch)'
    print -Pr $'\n'"$preprompt_left"
}
setopt PROMPT_SUBST
local return_code="%(?..%{$fg[red]%}%? â†µ%{$reset_color%})"
PROMPT='$ '
RPS1='${return_code}'

#
# ALIASES
# --------------------------------------------------------------------------------------
alias vi="vim"
alias svi="sudo vi"
alias edit="vim"
alias e="vim"
alias mvi="mvim"

alias dots="cd $HOME/dotfiles"
alias vie="$EDITOR $HOME/dotfiles/vim/vimrc"
alias zshe="$EDITOR $HOME/dotfiles/zsh/zshrc"

alias python="python3"
alias pip="pip3"

alias lg="lazygit"
alias ddg="ddgr"

alias fonts="open $HOME/Library/Fonts"

alias venv="virtualenv -p python3 venv --no-site-package"

alias c="clear"

alias :sp="tmux splitw -v"
alias :vs="tmux splitw -h"
alias :q="exit"
alias :Q="exit"
alias :x="exit"

alias tks="tmux kill-session -t"
alias tksa="tmux kill-session -a"
alias tls="tmux list-sessions"

alias p="pwd"
alias ls="ls -p"
alias ls.="ls -d .*"
alias hs="history | grep"

alias pubip="curl http://ipecho.net/plain; echo"
alias locip="ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' \
    | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"

alias g="git"
alias ga="git add "
alias gs="git status "
alias gc="git commit -m "
alias gp="git push "

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

#
# FUNCTIONS
# --------------------------------------------------------------------------------------

# open current dir or the one in args
o() {
    if [ $# -eq 0 ]; then open .; else open "$@"; fi
}

# search (grep) from current dir or specified
search() { grep -rnIi "$1" . --color }

# create and enter directory
mkd() { mkdir -p "$@" && cd "$@" }

# preview csv files.
# source: http://stackoverflow.com/questions/1875305/command-line-csv-viewer
csvpreview() {
    sed 's/,,/, ,/g;s/,,/, ,/g' "$@" | column -s, -t | less -#2 -N -S
}

# Show Wi-Fi Network Passwords
# Exchange SSID with the SSID of the access point you wish to query the password from.
# https://github.com/ahmadawais/dotFiles/blob/7e5b5b632a61837917a5f6194b1929283a43ec91/.zshrc#L2621
wifipass() {
    security find-generic-password -D "AirPort network password" -a "$@" -gw
}

# extract file.
# source: http://nparikh.org/notes/zshrc.txt
extract() {
    if [ -f $1 ]; then
        case $1 in
        *.tar.bz2) tar -jxvf $1 ;;
        *.tar.gz) tar -zxvf $1 ;;
        *.bz2) bunzip2 $1 ;;
        *.dmg) hdiutil mount $1 ;;
        *.gz) gunzip $1 ;;
        *.tar) tar -xvf $1 ;;
        *.tbz2) tar -jxvf $1 ;;
        *.tgz) tar -zxvf $1 ;;
        *.zip) unzip $1 ;;
        *.ZIP) unzip $1 ;;
        *.pax) cat $1 | pax -r ;;
        *.pax.Z) uncompress $1 --stdout | pax -r ;;
        *.rar) unrar x $1 ;;
        *.Z) uncompress $1 ;;
        *) echo "'$1' cannot be extracted/mounted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

#
# EOF scripts
# --------------------------------------------------------------------------------------
source $ZSH/oh-my-zsh.sh
[ -f "`which tmux`" ] && [ -z $TMUX ] && tmux  # load tmux on start
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
