#!/bin/zsh
# File  : zshrc
# Author: Matthieu Petiteau <mpetiteau.pro@gmail.com>
# Date  : 26.10.2019
#
# ZSH config.
#

#
# BUNDLE MANAGER
# --------------------------------------------------------------------------------------
source ~/.antigen/antigen.zsh
antigen use oh-my-zsh

antigen bundle git
antigen bundle pip
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-completions

antigen apply

#
# GENERAL
# --------------------------------------------------------------------------------------
export ZSH="$HOME/.oh-my-zsh"
export TERM=xterm-256color
export LC_ALL="en_US.UTF-8"
export CLICOLOR=1
export EDITOR=/usr/local/bin/nvim
export LDFLAGS="-L/usr/local/opt/python@3.8/lib"

export PATH=$PATH:$HOME/.cargo/bin:/usr/local/bin/nvim:/usr/local/opt/python@3.8/bin

# grep colors
export GREP_OPTIONS='--color=auto'
export GREP_COLOR='0;30;42'

# fzf colors
export FZF_DEFAULT_OPTS="
    --height 40% --layout=reverse --border
    --color fg:231,bg:0,hl:199,fg+:231,bg+:233,hl+:201
    --color info:189,prompt:161,spinner:201,pointer:201,marker:118
"
export FZF_DEFAULT_COMMAND="fd -t f -H -L -E .git -E __pycache__"

COMPLETION_WAITING_DOTS="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"

# zsh auto-suggestions colors
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=200"

#
# ALIASES
# --------------------------------------------------------------------------------------
alias vi="nvim"
alias vim="nvim"
alias svi="sudo nvim"
alias edit="nvim"
alias e="nvim"

alias gvi="gnvim"

alias mvi="mvim"

alias dots="cd $HOME/dotfiles"
alias vie="$EDITOR $HOME/dotfiles/vim/init.vim"
alias zshe="$EDITOR $HOME/dotfiles/zsh/zshrc"

alias python="python3.8"
alias pip="pip3.8"

alias lg="lazygit"
alias ddg="ddgr"

alias fonts="open $HOME/Library/Fonts"

alias venv="python -m venv venv"

alias c="clear"
alias qq="exit"

alias sp="tmux splitw -v"
alias vs="tmux splitw -h"
alias tks="tmux kill-session -t"
alias tksa="tmux kill-session -a"
alias tls="tmux list-sessions"

alias p="pwd"
alias ls="ls -p"
alias ls.="ls -d .*"

alias hs="history | rg"
alias hsu="history | cut -c 8- | sort -u | rg"

alias pubip="curl http://ipecho.net/plain; echo"
alias myip="curl http://ipecho.net/plain; echo"
alias locip="ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' \
    | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"

alias g="git"
alias ga="git add "
alias gs="git status "
alias gc="git commit -m "
alias gp="git push "

alias cdr='cd $(git rev-parse --show-cdup)'
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

#
# FUNCTIONS
# --------------------------------------------------------------------------------------

# open vimr in current dir on file
vir() {
    if [ $# -eq 0 ]; then open -a vimR .; else open -a vimR "$@"; fi
}

# open current dir or the one in args
o() {
    if [ $# -eq 0 ]; then open .; else open "$@"; fi
}

# search (grep) from current dir or specified
search() { grep -rnIi "$1" . --color }

# create and enter directory
mkd() { mkdir -p "$@" && cd "$@" }

# preview csv files.
# source: http://stackoverflow.com/questions/1875305/command-line-csv-viewer
csvpreview() {
    sed 's/,,/, ,/g;s/,,/, ,/g' "$@" | column -s, -t | less -#2 -N -S
}

# Show Wi-Fi Network Passwords
# Exchange SSID with the SSID of the access point you wish to query the password from.
# https://github.com/ahmadawais/dotFiles/blob/7e5b5b632a61837917a5f6194b1929283a43ec91/.zshrc#L2621
wifipass() {
    security find-generic-password -D "AirPort network password" -a "$@" -gw
}

# extract file.
# source: http://nparikh.org/notes/zshrc.txt
extract() {
    if [ -f $1 ]; then
        case $1 in
        *.tar.bz2) tar -jxvf $1 ;;
        *.tar.gz) tar -zxvf $1 ;;
        *.bz2) bunzip2 $1 ;;
        *.dmg) hdiutil mount $1 ;;
        *.gz) gunzip $1 ;;
        *.tar) tar -xvf $1 ;;
        *.tbz2) tar -jxvf $1 ;;
        *.tgz) tar -zxvf $1 ;;
        *.zip) unzip $1 ;;
        *.ZIP) unzip $1 ;;
        *.pax) cat $1 | pax -r ;;
        *.pax.Z) uncompress $1 --stdout | pax -r ;;
        *.rar) unrar x $1 ;;
        *.Z) uncompress $1 ;;
        *) echo "'$1' cannot be extracted/mounted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

#
# LOAD
# --------------------------------------------------------------------------------------
case $- in *i*)
    if [ -z "$TMUX" ]; then exec tmux; fi;;
esac
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

#
# PROMPT (with vim-like mode)
# --------------------------------------------------------------------------------------

# source vim-mode plugin
source ~/.config/zsh/zsh-vim-mode.zsh

# vim-mode indicator
MODE_INDICATOR_VICMD='%F{5}N %f'
MODE_INDICATOR_REPLACE='%F{1}R %f'
MODE_INDICATOR_SEARCH='%F{2}S %f'
MODE_INDICATOR_VISUAL='%F{4}V %f'
MODE_INDICATOR_VLINE='%F{4}V %f'

# vim-mode cursors
MODE_CURSOR_VICMD="#7dff2b block"
MODE_CURSOR_VIINS="#20d08a bar"
MODE_CURSOR_SEARCH="#ff00ff steady underline"

# git info
autoload -Uz vcs_info
zstyle ':vcs_info:git:*' formats '(%b) '
precmd() { vcs_info }
setopt prompt_subst

# prompt
PS1='${MODE_INDICATOR_PROMPT}%1d ${vcs_info_msg_0_}%# '
RPS1="%{$fg[red]%}%(?.. %?)%{$reset_color%}"

# zsh-vim yank copy to clipboard.
vi-yank-xclip() {
    zle vi-yank
    echo "$CUTBUFFER" | pbcopy
}
zle -N vi-yank-xclip
bindkey -M vicmd 'y' vi-yank-xclip
